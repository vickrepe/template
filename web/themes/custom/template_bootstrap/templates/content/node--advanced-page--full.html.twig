{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}
{{ attach_library('bootstrap_barrio/hero') }}

{%
  set custom_class = ''
%}

{% if node.field_select_header_design.value == 'short' %}
	{% set custom_class = 'short-class' %}
{% elseif node.field_select_header_design.value == 'short_form' %}
	{% set custom_class = 'short-form-class' %}
{% elseif node.field_select_header_design.value == 'long' %}
	{% set custom_class = 'long-class' %}
{% endif %}

{% set responsive_style = 'hero_long' %}

{% if node.field_select_header_design.value == 'short' %}
	{% set responsive_style = 'hero_short' %}
{% elseif node.field_select_header_design.value == 'short_form' %}
	{% set responsive_style = 'hero_short' %}
{% elseif node.field_select_header_design.value == 'long' %}
	{% set responsive_style = 'hero_long' %}
{% endif %}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
    custom_class,
  ]
%}
<article{{attributes.addClass(classes)}}>
	<header>
		{{ title_prefix }}
		{% if label and not page %}
			<h2{{title_attributes.addClass('node__title')}}>
				<a href="{{ url }}" rel="bookmark">{{ label }}</a>
			</h2>
		{% endif %}
		{{ title_suffix }}
		{% if display_submitted %}
			<div class="node__meta">
				{{ author_picture }}
				{% block submitted %}
					<em{{author_attributes}}>
						{% trans %}Submitted by
						{{ author_name }}
						on
						{{ date }}{% endtrans %}
					</em>
				{% endblock %}
				{{ metadata }}
			</div>
		{% endif %}
	</header>
	<div{{content_attributes.addClass('node__content','clearfix')}}>
		<div class="box-icono-texto">
			<div>
				{{ content.body }}
			</div>
			<div class="container__hero">
				<div class="container__inside-hero">
					<div class="section__text-hero">
						<div class="text-hero__etiqueta">
							{% set hn_tag = content.field_hero_selector_hn_etiqueta[0]['#markup'] %}
							{% set hn_tag_ap = "<" ~ hn_tag ~ ">"  %}
							{% set hn_tag_cl = "</" ~ hn_tag ~ ">" %}
							{% if hn_tag is not empty %}
								{{ hn_tag_ap |raw }}
							{% endif %}
							{{ content.field_hero_etiqueta |render|striptags|trim }}
							{% if hn_tag is not empty %}
								{{ hn_tag_cl |raw }}
							{% endif %}
						</div>

						<div class="text-hero__title">
							{% set hn = content.field_hero_selector_hn[0]['#markup'] %}
							{% set hn_ap = "<" ~ hn ~ ">"  %}
							{% set hn_cl = "</" ~ hn ~ ">" %}
							{% if hn is not empty %}
								{{ hn_ap |raw }}
							{% endif %}
							{{ content.field_hero_titulo |render|striptags|trim }}
							{% if hn is not empty %}
								{{ hn_cl |raw }}
							{% endif %}
						</div>
						{{ content.field_hero_texto }}
						{% if content.field_enlace_cta['#items'] is defined %}
							<div class="custom-links">
								{% for key, item in content.field_enlace_cta['#items'] %}
									<a href="{{ item.url }}" class="btn-link-{{ key }}">{{ item.title }}</a>
								{% endfor %}
							</div>
						{% endif %}
					</div>
					{% if node.field_select_header_design.value == 'short_form' %}
						<div class="header-contact">
							{{ content.field_contacto }}
						</div>
					{% endif %}
				</div>
				<div class="section__image-hero">
					{% if content.field_media['#items'] is defined and content.field_media['#items']|length > 0 %}
						{% set image_uri = content.field_media['#items'].entity.uri.value %}
					{% endif %}
					{% if image_uri is defined %}
						{{ drupal_image(image_uri, responsive_style, {loading: 'eager',fetchpriority: 'high'}, responsive=true) }}
					{% else %}
						{{ content.field_media }}
					{% endif %}

				</div>
			</div>

		</div>
		{% if not is_front and drupal_block('system_breadcrumb_block') is not empty %}
			<div class="container_breadcrumbs kmm-container">
				{{ drupal_block('system_breadcrumb_block') }}
			</div>
		{% endif %}
		{{ content.field_content_blocks }}
		<div>
			{{ content.field_webform }}
		</div>
	</div>
</article>
