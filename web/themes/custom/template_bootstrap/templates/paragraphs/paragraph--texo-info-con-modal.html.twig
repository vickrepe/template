{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="servicio">
        <div class="titulo-servicio">
          {# si no hay miagen no texto con mas info lo muestro como un texto simple y no agrego el icono de mas info #}
          {% if content.field_detalle_servicio[0] is empty and content.field_imagen_servicio[0] is empty and  content.field_link_servicio[0] is empty %}
            {{ content.field_titulo_servicio }}
          {% else %}
            <a  class="d-flex flex-row align-items-center pr-2 mb-0" href="#" onclick="openDialog('dialog-{{paragraph.id.value}}'); return false;">
              {{ content.field_titulo_servicio }}

                {% if content.field_link_servicio|render|striptags|trim is empty %}
                <svg class="bi bi-info-circle ms-2 text-warning service-info-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"  viewBox="0 0 16 16">
                  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                  <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                </svg>
                {% else %}
                  <img src="/{{ directory }}/img/icon-video.svg" title="icon video" class="icon-video" />
                {% endif %}
            </a>
          {% endif %}
        </div>

        {% if content.field_detalle_servicio[0] is not empty or content.field_imagen_servicio[0] is not empty or content.field_link_servicio[0] is not empty %}
          <dialog class="servicio-dialog" id="dialog-{{paragraph.id.value}}" style="z-index: 10;">
            <div class="d-flex justify-content-end mb-2">
              <button type="button" class="btn-close" aria-label="Close" onclick="closeDialog('dialog-{{paragraph.id.value}}')"></button>
            </div>
            <div class="d-flex align-items-start detalle-servicio">
             <svg class="bi bi-info-circle me-2 text-warning service-info-icon" style="min-width:35px;" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"  viewBox="0 0 16 16">
                  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                  <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                </svg>
              {{ content.field_detalle_servicio }}
            </div>
            {{ content.field_imagen_servicio }}
            <div class="servicio-dialog__container-iframe">
              <iframe src="{{ content.field_link_servicio|render|striptags|trim }}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
            </div>
          </dialog>
        {% endif %}
      </div>

    {% endblock %}
  </div>
{% endblock paragraph %}
